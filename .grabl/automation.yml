#
# Copyright (C) 2022 Vaticle
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

build:
  correctness:
    build:
      image: vaticle-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel build //...
        bazel run @vaticle_dependencies//tool/checkstyle:test-coverage
        bazel test $(bazel query 'kind(checkstyle_test, //...)') --test_output=streamed
    build-dependency:
      image: vaticle-ubuntu-20.04
      command: |
        dependencies/maven/update.sh
        git diff --exit-code dependencies/maven/artifacts.snapshot
        bazel run @vaticle_dependencies//tool/unuseddeps:unused-deps -- list
    test-comparison-typedb-core-server:
      machine: 16-core-32-gb
      image: vaticle-ubuntu-20.04
      type: background
      timeout: "30m"
      command: |
        bazel run @vaticle_dependencies//tool/util:create-systemd-service -- typedb "\/home\/grabl\/$GRABL_REPO\/dist\/typedb-all-linux\/typedb server"
        bazel run //test:typedb-extractor-linux -- dist/typedb-all-linux
        cd ./dist/typedb-all-linux/

        sudo systemctl daemon-reload
        sudo systemctl start typedb
        export GRABL_EXPORT_TEST_COMPARISON_TYPEDB_URI="${HOSTNAME}:1729"
      monitor: |
        sleep 10s
        tail -f -n +1 /home/grabl/$GRABL_REPO/dist/typedb-all-linux/server/logs/typedb.log
    test-comparison-neo4j-server:
      machine: 16-core-32-gb
      image: vaticle-ubuntu-20.04
      type: background
      timeout: "30m"
      command: |
        sudo add-apt-repository -y ppa:openjdk-r/ppa
        curl https://cli-assets.heroku.com/apt/release.key | sudo apt-key add -
        curl https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo apt-get update
        wget -O - https://debian.neo4j.com/neotechnology.gpg.key | sudo apt-key add -
        echo 'deb https://debian.neo4j.com stable 4.4' | sudo tee -a /etc/apt/sources.list.d/neo4j.list
        sudo apt-get update
        sudo apt-get install -y neo4j=1:4.4.6
        sudo update-java-alternatives --jre --set java-1.11.0-openjdk-amd64
        echo 'dbms.connector.bolt.listen_address=0.0.0.0:7687' | sudo tee -a /etc/neo4j/neo4j.conf
        echo 'dbms.security.auth_enabled=false' | sudo tee -a /etc/neo4j/neo4j.conf
        echo 'dbms.recovery.fail_on_missing_files=false' | sudo tee -a /etc/neo4j/neo4j.conf
        sudo systemctl restart neo4j
        export GRABL_EXPORT_TEST_COMPARISON_NEO4J_URI="${HOSTNAME}:7687"
      monitor: |
        journalctl -fu neo4j
    test-comparison:
      machine: 16-core-32-gb
      image: vaticle-ubuntu-20.04
      timeout: "30m"
      dependencies: [test-comparison-typedb-core-server, test-comparison-neo4j-server]
      command: |
        echo 'Trying to connect to Neo4j'
        attempt_counter=0
        max_attempts=50
        expected_exit_code=52
        until curl --output /dev/null --silent --head --fail $GRABL_EXPORT_TEST_COMPARISON_NEO4J_URI || [[ $? == $expected_exit_code ]]; do
            if [ ${attempt_counter} -eq ${max_attempts} ];then
              echo "Max attempts reached"
              exit 1
            fi

            echo '...'
            attempt_counter=$(($attempt_counter+1))
            sleep 3
        done
        bazel test //test:comparison-test \
          --test_output=streamed \
          --test_arg=--typedb=$GRABL_EXPORT_TEST_COMPARISON_TYPEDB_URI \
          --test_arg=--neo4j=bolt://$GRABL_EXPORT_TEST_COMPARISON_NEO4J_URI
  performance:
    test-performance-typedb-core-server:
      machine: 16-core-32-gb
      image: vaticle-ubuntu-20.04
      type: background
      timeout: "30m"
      command: |
        bazel run //test:typedb-extractor-linux -- dist/typedb-all-linux
        bazel run @vaticle_dependencies//tool/util:create-systemd-service -- typedb "\/home\/grabl\/$GRABL_REPO\/dist\/typedb-all-linux\/typedb server"

        sudo systemctl daemon-reload
        sudo systemctl start typedb

        export GRABL_EXPORT_PERFORMANCE_TYPEDB_CORE_URI="${HOSTNAME}:1729"
      monitor: |
        sleep 10s
        tail -f -n +1 ./dist/typedb-all-linux/server/logs/typedb.log
    test-performance-typedb-core-benchmark:
      machine: 16-core-32-gb
      image: vaticle-ubuntu-20.04
      dependencies: [test-performance-typedb-core-server]
      timeout: "30m"
      command: |
        bazel run //:benchmark -- \
          --database typedb \
          --address $GRABL_EXPORT_PERFORMANCE_TYPEDB_CORE_URI \
          --config /home/grabl/$GRABL_REPO/config/simulation.yml \
#          --factory $GRABL_TRACING_URI \
#          --org $GRABL_OWNER \
#          --repo $GRABL_REPO \
#          --commit $GRABL_COMMIT \
#          --username $GRABL_OWNER \
#          --token $GRABL_TOKEN
    test-performance-neo4j-server:
      machine: 16-core-32-gb
      image: vaticle-ubuntu-20.04
      type: background
      timeout: "30m"
      monitor: |
        journalctl -fu neo4j
      command: |
        sudo add-apt-repository -y ppa:openjdk-r/ppa
        curl https://cli-assets.heroku.com/apt/release.key | sudo apt-key add -
        curl https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo apt-get update
        wget -O - https://debian.neo4j.com/neotechnology.gpg.key | sudo apt-key add -
        echo 'deb https://debian.neo4j.com stable 4.2' | sudo tee -a /etc/apt/sources.list.d/neo4j.list
        sudo apt-get update
        sudo apt-get install -y neo4j=1:4.2.5
        sudo update-java-alternatives --jre --set java-1.11.0-openjdk-amd64
        echo 'dbms.connector.bolt.listen_address=0.0.0.0:7687' | sudo tee -a /etc/neo4j/neo4j.conf
        echo 'dbms.security.auth_enabled=false' | sudo tee -a /etc/neo4j/neo4j.conf
        echo 'dbms.memory.heap.max_size=24G' | sudo tee -a /etc/neo4j/neo4j.conf
        sudo systemctl restart neo4j
        export GRABL_EXPORT_PERFORMANCE_NEO4J_URI="${HOSTNAME}:7687"
    test-performance-neo4j-benchmark:
      machine: 16-core-32-gb
      image: vaticle-ubuntu-20.04
      dependencies: [ test-performance-neo4j-server ]
      timeout: "30m"
      command: |
        echo 'Trying to connect to Neo4j'
        attempt_counter=0
        max_attempts=50
        expected_exit_code=52
        until curl --output /dev/null --silent --head --fail $GRABL_EXPORT_PERFORMANCE_NEO4J_URI || [[ $? == $expected_exit_code ]]; do
            if [ ${attempt_counter} -eq ${max_attempts} ];then
              echo "Max attempts reached"
              exit 1
            fi
            echo '...'
            attempt_counter=$(($attempt_counter+1))
            sleep 3
        done
        bazel run //:benchmark -- \
          --database neo4j \
          --address bolt://$GRABL_EXPORT_PERFORMANCE_NEO4J_URI \
          --config /home/grabl/$GRABL_REPO/config/simulation.yml \
#          --factory $GRABL_TRACING_URI \
#          --org $GRABL_OWNER \
#          --repo $GRABL_REPO \
#          --commit $GRABL_COMMIT \
#          --username $GRABL_OWNER \
#          --token $GRABL_TOKEN
    test-performance-typedb-cluster-one-server:
      machine: 16-core-32-gb
      image: vaticle-ubuntu-20.04
      type: background
      timeout: "30m"
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc

        bazel run //test:typedb-cluster-extractor-linux -- dist/typedb-cluster-all-linux
        bazel run @vaticle_dependencies//tool/util:create-systemd-service -- typedb-cluster "\/home\/grabl\/$GRABL_REPO\/dist\/typedb-cluster-all-linux\/typedb cluster --server.address=${HOSTNAME}:1729"

        sudo systemctl daemon-reload
        sudo systemctl start typedb-cluster

        export GRABL_EXPORT_PERFORMANCE_TYPEDB_CLUSTER_SERVER_URI="${HOSTNAME}:1729"
      monitor: |
        sleep 20s
        tail -f -n +1 ./dist/typedb-cluster-all-linux/server/logs/typedb.log
    test-performance-typedb-cluster-one-benchmark:
      machine: 16-core-32-gb
      image: vaticle-ubuntu-20.04
      dependencies: [test-performance-typedb-cluster-one-server]
      timeout: "30m"
      command: |
       bazel run //:benchmark -- \
         --database typedb-cluster \
         --address $GRABL_EXPORT_PERFORMANCE_TYPEDB_CLUSTER_SERVER_URI \
         --config /home/grabl/$GRABL_REPO/config/simulation.yml \
#         --factory $GRABL_TRACING_URI \
#         --org $GRABL_OWNER \
#         --repo $GRABL_REPO \
#         --commit $GRABL_COMMIT \
#         --username $GRABL_OWNER \
#         --token $GRABL_TOKEN
#    test-performance-typedb-cluster-three-bootstrapper:
#      image: vaticle-ubuntu-20.04
#      type: background
#      command: |
#        bazel run @vaticle_dependencies//tool/util:install-ssh-credential
#        export GRABL_EXPORT_PERFORMANCE_TYPEDB_CLUSTER_BOOTSTRAPPER_URI="${HOSTNAME}"
#
#      monitor: |
#        bazel run @vaticle_dependencies//tool/util:wait-for-file -- /tmp/typedb-cluster-server-1.txt
#        bazel run @vaticle_dependencies//tool/util:wait-for-file -- /tmp/typedb-cluster-server-2.txt
#        bazel run @vaticle_dependencies//tool/util:wait-for-file -- /tmp/typedb-cluster-server-3.txt
#
#        # to server 1
#        bazel run @vaticle_dependencies//tool/util:transfer-file -- /tmp/typedb-cluster-server-2.txt grabl@$(cat /tmp/typedb-cluster-server-1.txt):/tmp/typedb-cluster-server-2.txt
#        bazel run @vaticle_dependencies//tool/util:transfer-file -- /tmp/typedb-cluster-server-3.txt grabl@$(cat /tmp/typedb-cluster-server-1.txt):/tmp/typedb-cluster-server-3.txt
#
#        # to server 2
#        bazel run @vaticle_dependencies//tool/util:transfer-file -- /tmp/typedb-cluster-server-1.txt grabl@$(cat /tmp/typedb-cluster-server-2.txt):/tmp/typedb-cluster-server-1.txt
#        bazel run @vaticle_dependencies//tool/util:transfer-file -- /tmp/typedb-cluster-server-3.txt grabl@$(cat /tmp/typedb-cluster-server-2.txt):/tmp/typedb-cluster-server-3.txt
#
#        # to server 3
#        bazel run @vaticle_dependencies//tool/util:transfer-file -- /tmp/typedb-cluster-server-1.txt grabl@$(cat /tmp/typedb-cluster-server-3.txt):/tmp/typedb-cluster-server-1.txt
#        bazel run @vaticle_dependencies//tool/util:transfer-file -- /tmp/typedb-cluster-server-2.txt grabl@$(cat /tmp/typedb-cluster-server-3.txt):/tmp/typedb-cluster-server-2.txt
#
#        sleep 1800
#    test-performance-typedb-cluster-three-server-1:
#      machine: 16-core-32-gb
#      image: vaticle-ubuntu-20.04
#      type: background
#      dependencies: [test-performance-typedb-cluster-three-bootstrapper]
#      timeout: "30m"
#      command: |
#        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
#        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
#        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
#
#        bazel run @vaticle_dependencies//tool/util:install-ssh-credential
#
#        echo -n "${HOSTNAME}" > /tmp/typedb-cluster-server-1.txt
#        bazel run @vaticle_dependencies//tool/util:transfer-file -- /tmp/typedb-cluster-server-1.txt \
#          grabl@$GRABL_EXPORT_PERFORMANCE_TYPEDB_CLUSTER_BOOTSTRAPPER_URI:/tmp/typedb-cluster-server-1.txt
#
#        bazel run @vaticle_dependencies//tool/util:wait-for-file -- /tmp/typedb-cluster-server-2.txt
#        bazel run @vaticle_dependencies//tool/util:wait-for-file -- /tmp/typedb-cluster-server-3.txt
#
#        bazel run //test:typedb-cluster-extractor-linux -- dist/typedb-cluster-all-linux
#        PEER_1=$(cat /tmp/typedb-cluster-server-1.txt)
#        PEER_2=$(cat /tmp/typedb-cluster-server-2.txt)
#        PEER_3=$(cat /tmp/typedb-cluster-server-3.txt)
#        export BIN="\/home\/grabl\/$GRABL_REPO\/dist\/typedb-cluster-all-linux\/typedb cluster"
#        export OPTS_ADDR="--server.address=$PEER_1:1729 --server.internal-address.zeromq=$PEER_1:1730 --server.internal-address.grpc=$PEER_1:1731"
#        export OPTS_PEER_1="--server.peers.peer-1.address=$PEER_1:1729 --server.peers.peer-1.internal-address.zeromq=$PEER_1:1730 --server.peers.peer-1.internal-address.grpc=$PEER_1:1731"
#        export OPTS_PEER_2="--server.peers.peer-2.address=$PEER_2:1729 --server.peers.peer-2.internal-address.zeromq=$PEER_2:1730 --server.peers.peer-2.internal-address.grpc=$PEER_2:1731"
#        export OPTS_PEER_3="--server.peers.peer-3.address=$PEER_3:1729 --server.peers.peer-3.internal-address.zeromq=$PEER_3:1730 --server.peers.peer-3.internal-address.grpc=$PEER_3:1731"
#        bazel run @vaticle_dependencies//tool/util:create-systemd-service -- typedb-cluster "$BIN $OPTS_ADDR $OPTS_PEER_1 $OPTS_PEER_2 $OPTS_PEER_3"
#
#        sudo systemctl daemon-reload
#        sudo systemctl start typedb-cluster
#
#        export GRABL_EXPORT_PERFORMANCE_TYPEDB_CLUSTER_SERVER_URI="${HOSTNAME}:1729"
#      monitor: |
#        sleep 20s
#        tail -f -n +1 ./dist/typedb-cluster-all-linux/server/logs/typedb.log
#    test-performance-typedb-cluster-three-server-2:
#      machine: 16-core-32-gb
#      image: vaticle-ubuntu-20.04
#      type: background
#      dependencies: [test-performance-typedb-cluster-three-bootstrapper]
#      timeout: "30m"
#      command: |
#        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
#        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
#        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
#
#        bazel run @vaticle_dependencies//tool/util:install-ssh-credential
#
#        echo -n "${HOSTNAME}" > /tmp/typedb-cluster-server-2.txt
#        bazel run @vaticle_dependencies//tool/util:transfer-file -- /tmp/typedb-cluster-server-2.txt \
#          grabl@$GRABL_EXPORT_PERFORMANCE_TYPEDB_CLUSTER_BOOTSTRAPPER_URI:/tmp/typedb-cluster-server-2.txt
#
#        bazel run @vaticle_dependencies//tool/util:wait-for-file -- /tmp/typedb-cluster-server-1.txt
#        bazel run @vaticle_dependencies//tool/util:wait-for-file -- /tmp/typedb-cluster-server-3.txt
#
#        bazel run //test:typedb-cluster-extractor-linux -- dist/typedb-cluster-all-linux
#        PEER_1=$(cat /tmp/typedb-cluster-server-1.txt)
#        PEER_2=$(cat /tmp/typedb-cluster-server-2.txt)
#        PEER_3=$(cat /tmp/typedb-cluster-server-3.txt)
#        export BIN="\/home\/grabl\/$GRABL_REPO\/dist\/typedb-cluster-all-linux\/typedb cluster"
#        export OPTS_ADDR="--server.address=$PEER_2:1729 --server.internal-address.zeromq=$PEER_2:1730 --server.internal-address.grpc=$PEER_2:1731"
#        export OPTS_PEER_1="--server.peers.peer-1.address=$PEER_1:1729 --server.peers.peer-1.internal-address.zeromq=$PEER_1:1730 --server.peers.peer-1.internal-address.grpc=$PEER_1:1731"
#        export OPTS_PEER_2="--server.peers.peer-2.address=$PEER_2:1729 --server.peers.peer-2.internal-address.zeromq=$PEER_2:1730 --server.peers.peer-2.internal-address.grpc=$PEER_2:1731"
#        export OPTS_PEER_3="--server.peers.peer-3.address=$PEER_3:1729 --server.peers.peer-3.internal-address.zeromq=$PEER_3:1730 --server.peers.peer-3.internal-address.grpc=$PEER_3:1731"
#        bazel run @vaticle_dependencies//tool/util:create-systemd-service -- typedb-cluster "$BIN $OPTS_ADDR $OPTS_PEER_1 $OPTS_PEER_2 $OPTS_PEER_3"
#
#        sudo systemctl daemon-reload
#        sudo systemctl start typedb-cluster
#
#        export GRABL_EXPORT_PERFORMANCE_TYPEDB_CLUSTER_SERVER_URI="${HOSTNAME}:1729"
#      monitor: |
#        sleep 20s
#        tail -f -n +1 ./dist/typedb-cluster-all-linux/server/logs/typedb.log
#    test-performance-typedb-cluster-three-server-3:
#      machine: 16-core-32-gb
#      image: vaticle-ubuntu-20.04
#      type: background
#      dependencies: [test-performance-typedb-cluster-three-bootstrapper]
#      timeout: "30m"
#      command: |
#        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
#        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
#        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
#
#        bazel run @vaticle_dependencies//tool/util:install-ssh-credential
#
#        echo -n "${HOSTNAME}" > /tmp/typedb-cluster-server-3.txt
#        bazel run @vaticle_dependencies//tool/util:transfer-file -- /tmp/typedb-cluster-server-3.txt \
#          grabl@$GRABL_EXPORT_PERFORMANCE_TYPEDB_CLUSTER_BOOTSTRAPPER_URI:/tmp/typedb-cluster-server-3.txt
#
#        bazel run @vaticle_dependencies//tool/util:wait-for-file -- /tmp/typedb-cluster-server-1.txt
#        bazel run @vaticle_dependencies//tool/util:wait-for-file -- /tmp/typedb-cluster-server-2.txt
#
#        bazel run //test:typedb-cluster-extractor-linux -- dist/typedb-cluster-all-linux
#        PEER_1=$(cat /tmp/typedb-cluster-server-1.txt)
#        PEER_2=$(cat /tmp/typedb-cluster-server-2.txt)
#        PEER_3=$(cat /tmp/typedb-cluster-server-3.txt)
#        export BIN="\/home\/grabl\/$GRABL_REPO\/dist\/typedb-cluster-all-linux\/typedb cluster"
#        export OPTS_ADDR="--server.address=$PEER_3:1729 --server.internal-address.zeromq=$PEER_3:1730 --server.internal-address.grpc=$PEER_3:1731"
#        export OPTS_PEER_1="--server.peers.peer-1.address=$PEER_1:1729 --server.peers.peer-1.internal-address.zeromq=$PEER_1:1730 --server.peers.peer-1.internal-address.grpc=$PEER_1:1731"
#        export OPTS_PEER_2="--server.peers.peer-2.address=$PEER_2:1729 --server.peers.peer-2.internal-address.zeromq=$PEER_2:1730 --server.peers.peer-2.internal-address.grpc=$PEER_2:1731"
#        export OPTS_PEER_3="--server.peers.peer-3.address=$PEER_3:1729 --server.peers.peer-3.internal-address.zeromq=$PEER_3:1730 --server.peers.peer-3.internal-address.grpc=$PEER_3:1731"
#        bazel run @vaticle_dependencies//tool/util:create-systemd-service -- typedb-cluster "$BIN $OPTS_ADDR $OPTS_PEER_1 $OPTS_PEER_2 $OPTS_PEER_3"
#
#        sudo systemctl daemon-reload
#        sudo systemctl start typedb-cluster
#
#        export GRABL_EXPORT_PERFORMANCE_TYPEDB_CLUSTER_SERVER_URI="${HOSTNAME}:1729"
#      monitor: |
#        sleep 20s
#        tail -f -n +1 ./dist/typedb-cluster-all-linux/server/logs/typedb.log
#    test-performance-typedb-cluster-three-benchmark:
#      machine: 16-core-32-gb
#      image: vaticle-ubuntu-20.04
#      dependencies: [test-performance-typedb-cluster-three-server-1, test-performance-typedb-cluster-three-server-2, test-performance-typedb-cluster-three-server-3]
#      timeout: "30m"
#      command: |
#       bazel run //:benchmark -- \
#         --database typedb-cluster \
#         --address $GRABL_EXPORT_PERFORMANCE_TYPEDB_CLUSTER_SERVER_URI \
#         --config /home/grabl/$GRABL_REPO/config/simulation.yml \
#         --factory $GRABL_TRACING_URI \
#         --org $GRABL_OWNER \
#         --repo $GRABL_REPO \
#         --commit $GRABL_COMMIT \
#         --username $GRABL_OWNER \
#         --token $GRABL_TOKEN